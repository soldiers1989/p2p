DELETE FROM `S10`.`_1010` WHERE F01 = 'SITESWITCH.IOS_DONATION_BID_SWITCH';
INSERT INTO `S10`.`_1010` VALUES ('SITESWITCH.IOS_DONATION_BID_SWITCH', 'true', 'SITESWITCH', 'IOS端控制公益标功能的开关，true：开通公益标功能；false：关闭公益标功能');

ALTER TABLE S10._1030 ADD COLUMN `F08` int(11) DEFAULT '0' COMMENT '会话是否有效:0-有效；1-无效';
ALTER TABLE S10._1030 ADD COLUMN `F09` enum('pc','ios','ad','wx','other') DEFAULT 'pc' COMMENT '登录终端标识: pc，ios，ad，wx，other';

ALTER TABLE S11._1030 ADD COLUMN `F08` int(11) DEFAULT '0' COMMENT '会话是否有效:0-有效；1-无效';
ALTER TABLE S11._1030 ADD COLUMN `F09` enum('pc','ios','ad','wx','other') DEFAULT 'pc' COMMENT '登录终端标识: pc，ios，ad，wx，other';

ALTER TABLE `S50`.`T5017`
MODIFY COLUMN `F01`  enum('ZCXY','TFJKXY','FFJKXY','ZQZRXY','BLZQZRXY','GYJZXY','GRXXCQSQTK','QYXXCJSQTK','FXTSH') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '协议类型,ZCXY:注册协议;TFJKXY:三方借款协议;FFJKXY:四方借款协议;ZQZRXY:债权转让协议;BLZQZRXY:不良债权转让协议;GYJZXY:公益捐助协议;GRXXCQSQTK:个人信息采集授权条款;QYXXCJSQTK:企业信息采集授权条款;FXTSH:风险提示函' FIRST ;

INSERT INTO `S50`.`T5017` VALUES('BLZQZRXY', '', 0,CURRENT_TIMESTAMP(), 'QY');
ALTER TABLE `S51`.`T5122`
ADD COLUMN `F09`  enum('yes','no') CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT 'no' COMMENT '是否属于担保类型,yes:属于;no:不属于;' AFTER `F08`;

INSERT INTO `S51`.`T5122` VALUES ('1301', '发标审核担保额度扣除', 'QY', 'no', 'no', 'no', 'no', 'no', 'yes');
INSERT INTO `S51`.`T5122` VALUES ('1302', '流标担保额度返还', 'QY', 'no', 'no', 'no', 'no', 'no', 'yes');
INSERT INTO `S51`.`T5122` VALUES ('1303', '还款担保额度返还', 'QY', 'no', 'no', 'no', 'no', 'no', 'yes');
INSERT INTO `S51`.`T5122` VALUES ('1304', '人工调整担保额度', 'QY', 'no', 'no', 'no', 'no', 'no', 'yes');
INSERT INTO `S51`.`T5122` VALUES ('1305', '默认担保额度', 'QY', 'no', 'no', 'no', 'no', 'no', 'yes');
INSERT INTO `S51`.`T5122` VALUES ('1306', '放款多余担保额度返还', 'QY', 'no', 'no', 'no', 'no', 'no', 'yes');
INSERT INTO `S51`.`T5122` VALUES ('1307', '购买不良债权额度赠送', 'QY', 'no', 'no', 'no', 'no', 'no', 'yes');
INSERT INTO `S51`.`T5122` VALUES ('2005', '提现失败金额返还', 'QY', 'yes', 'yes', 'yes', 'no', 'no', 'no');
INSERT INTO `S51`.`T5122` VALUES ('2006', '提现失败手续费返还', 'QY', 'yes', 'yes', 'yes', 'yes', 'no', 'no');
INSERT INTO `S51`.`T5122` VALUES ('1106', '放款多余信用额度返还', 'QY', 'no', 'no', 'no', 'no', 'yes', 'no');
INSERT INTO `S51`.`T5122` VALUES ('4004', '购买不良债权', 'QY', 'no', 'no', 'yes', 'no', 'no', 'no');

INSERT INTO `S51`.`T5125` VALUES ('2002', '0', '不良债权转让协议', CURRENT_TIMESTAMP());
INSERT INTO `S51`.`T5125` VALUES ('5002', '0', '垫付协议', CURRENT_TIMESTAMP());
INSERT INTO `S51`.`T5125` VALUES ('5003', '0', '网签协议', CURRENT_TIMESTAMP());

INSERT INTO `S51`.`T5126` VALUES (2002, 0, '', CURRENT_TIMESTAMP());
INSERT INTO `S51`.`T5126` VALUES (5002, 0, '', CURRENT_TIMESTAMP());
INSERT INTO `S51`.`T5126` VALUES (5003, 0, '', CURRENT_TIMESTAMP());

INSERT INTO `S51`.`T5132` (`F01`, `F02`, `F03`, `F04`, `F05`, `F06`, `F07`) VALUES(20015,'购买不良债权','QY','no','no','yes','yes');

DROP TABLE IF EXISTS `S61`.`T6125`;
CREATE TABLE `S61`.`T6125` (
  `F01` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `F02` int(10) NOT NULL COMMENT '用户ID（参考T6110.F01）',
  `F03` char(7) NOT NULL COMMENT '担保码',
  `F04` decimal(20,2) NOT NULL DEFAULT '0.00' COMMENT '担保额度',
  `F05` enum('SQDCL','QXDCL','SQCG','SQSB','QXCG','QXSB') NOT NULL COMMENT '状态：''SQDCL''：申请担保待处理,''QXDCL''：取消担保待处理,''SQCG''：申请担保成功,''SQSB''：申请担保失败,''QXCG''：取消担保成功,''QXSB''：取消担保失败',
  `F06` datetime NOT NULL COMMENT '申请时间',
  `F07` int(10) DEFAULT NULL COMMENT '审核人（参考T7110.F01）',
  `F08` datetime DEFAULT NULL COMMENT '审核时间',
  `F09` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `F10` varchar(200) DEFAULT NULL COMMENT '审核意见',
  PRIMARY KEY (`F01`),
  UNIQUE KEY `unquie_index` (`F02`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='担保方申请表';


DROP TABLE IF EXISTS `S61`.`T6126`;
CREATE TABLE `S61`.`T6126` (
  `F01` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `F02` int(10) unsigned NOT NULL COMMENT '用户账号ID,参考T6110.F01',
  `F03` int(10) unsigned NOT NULL COMMENT '交易类型ID,参考T5122.F01',
  `F04` datetime NOT NULL COMMENT '发生时间',
  `F05` decimal(20,2) NOT NULL DEFAULT '0.00' COMMENT '收入',
  `F06` decimal(20,2) NOT NULL DEFAULT '0.00' COMMENT '支出',
  `F07` decimal(20,2) NOT NULL COMMENT '余额',
  `F08` varchar(100) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`F01`),
  KEY `F02` (`F02`),
  KEY `F03` (`F03`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='担保方担保交易记录';

ALTER TABLE `S61`.`T6110`
ADD COLUMN `F19`  enum('F','S') NOT NULL DEFAULT 'F' COMMENT '是否允许购买不良债权,S:是;F:否;' AFTER `F18`;

ALTER TABLE `S61`.`T6141`
ADD COLUMN `F09`  enum('F','M') DEFAULT NULL COMMENT '性别:F女，M男';


ALTER TABLE `S61`.`T6161`
ADD COLUMN `F22`  enum('F','M') DEFAULT NULL COMMENT '性别:F女，M男';

ALTER TABLE S61.T6171 MODIFY COLUMN F07 VARCHAR(256) COMMENT '第三方登录授权码';


ALTER TABLE S61.T6196 ADD COLUMN 
F30 int(10) unsigned NOT NULL COMMENT '其他(天标)';

ALTER TABLE `S62`.T6230
MODIFY COLUMN `F20`  enum('SQZ','DSH','DFB','YFB','TBZ','DFK','HKZ','YDF','YZR','YJQ','YLB','YZF') CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT 'SQZ' COMMENT '状态,SQZ:申请中;DSH:待审核;DFB:待发布;YFB:预发布;TBZ:投资中;DFK:待放款;HKZ:还款中;YJQ:已结清;YLB:已流标;YDF:已垫付;YZF:已作废;YZR:已转让;' AFTER `F19`;


ALTER TABLE `S62`.`T6231`
ADD COLUMN `F34`  datetime NULL DEFAULT NULL COMMENT '不良债权转让时间' AFTER `F33`;


DROP TABLE IF EXISTS `S62`.`T6256`;
CREATE TABLE `S62`.`T6256` (
`F01`  int(11) UNSIGNED NOT NULL COMMENT '垫付标的ID,参考T6230.F01' ,
`F02`  int(11) NOT NULL COMMENT '版本号' ,
PRIMARY KEY (`F01`)
)
ENGINE=InnoDB DEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci COMMENT='垫付记录协议版本号' ROW_FORMAT=COMPACT;

DROP TABLE IF EXISTS `S62`.`T6264`;
CREATE TABLE `S62`.`T6264` (
  `F01` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `F02` varchar(20) NOT NULL COMMENT '债权编号',
  `F03` int(10) unsigned NOT NULL COMMENT '标ID,参考T6230.F01',
  `F04` enum('DSH','ZRZ','YZR','YXJ','ZRSB') NOT NULL COMMENT '状态,DSH:待审核;ZRZ:转让中;YZR:已转让;YXJ:已下架;ZRSB:转让失败',
  `F05` int(10) unsigned DEFAULT NULL COMMENT '逾期天数',
  `F06` int(10) unsigned NOT NULL COMMENT '标还款ID,参考T6252.F01',
  `F07` date NOT NULL COMMENT '申请时间',
  `F08` datetime NOT NULL COMMENT '操作时间',
  `F09` decimal(20,2) DEFAULT NULL COMMENT '债权价值',
  `F10` decimal(20,2) DEFAULT NULL COMMENT '转让价格',
  PRIMARY KEY (`F01`),
  KEY `F02` (`F02`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8 COMMENT='不良债权转让申请';


DROP TABLE IF EXISTS `S62`.`T6265`;
CREATE TABLE `S62`.`T6265` (
  `F01` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `F02` int(10) unsigned NOT NULL COMMENT '转让申请ID,参考T6264.F01',
  `F03` int(10) unsigned NOT NULL COMMENT '购买人ID,参考T6110.F01',
	`F04` int(10) unsigned NOT NULL COMMENT '原债权人ID,参考T6110.F01',
  `F05` decimal(20,2) unsigned NOT NULL COMMENT '债权价值',
  `F06` decimal(20,2) unsigned NOT NULL COMMENT '认购价格',
  `F07` datetime NOT NULL COMMENT '购买时间',
  PRIMARY KEY (`F01`),
  KEY `F02_idx` (`F02`),
  KEY `F03_idx` (`F03`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='不良债权转让记录';

DROP TABLE IF EXISTS `S62`.`T6266`;
CREATE TABLE `S62`.`T6266` (
  `F01` int(10) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `F02` int(10) NOT NULL COMMENT '转让id，参考T6265.F01',
  `F03` decimal(10,2) NOT NULL COMMENT '金额',
  `F04` int(10) NOT NULL COMMENT '收款人（投资人）',
  `F05` int(10) NOT NULL COMMENT '交易类型',
  `F06` int(10) NOT NULL COMMENT '债权id，T6251.F01',
  PRIMARY KEY (`F01`),
  KEY `F02_idx` (`F02`),
  KEY `F04_idx` (`F04`),
  KEY `F06_idx` (`F06`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT='不良债权转让还款明细表';

DROP TABLE IF EXISTS `S62`.`T6267`;
CREATE TABLE `S62`.`T6267` (
  `F01` int(11) unsigned NOT NULL COMMENT '不良债权转让ID,参考T6265.F01',
  `F02` int(11) NOT NULL COMMENT '版本号',
  PRIMARY KEY (`F01`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='不良债权转让协议版本号';

DROP TABLE IF EXISTS `S62`.`T6271`;
CREATE TABLE `S62`.`T6271` (
  `F01` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `F02` int(11) DEFAULT NULL COMMENT '用户ID，参考T6110.F01',
  `F03` int(11) DEFAULT NULL COMMENT '标的ID,参考T6230.F01',
  `F04` varchar(32) DEFAULT NULL COMMENT '合同编号',
  `F05` varchar(32) DEFAULT NULL COMMENT '易保全ID',
  `F06` datetime DEFAULT NULL COMMENT '保全时间',
  `F07` enum('WBQ','YBQ') DEFAULT 'WBQ' COMMENT '保全状态：WBQ-未保全，YBQ-已保全',
  `F08` enum('BLZQZRHT','DFHT','ZQZRHT','JKHT') DEFAULT 'JKHT' COMMENT '合同类型：JKHT-借款合同，ZQZRHT-债权转让合同，DFHT-垫付合同，BLZQZRHT-不良债权转让合同',
  `F09` varchar(128) DEFAULT NULL COMMENT '合同本地存储路径',
  `F10` enum('BDFR','DFR','SRR','ZCR','TZR','JKR') DEFAULT NULL COMMENT '用户类型: TZR-投资人，JKR-借款人，ZCR-转出人，SRR-受让人，DFR-垫付人，BDFR-被垫付人',
  `F11` int(11) DEFAULT NULL COMMENT '债权ID,参考T6251.F01',
  `F12` int(11) DEFAULT NULL COMMENT '不良债权ID,参考 T6265.F01',
  `F13` int(11) DEFAULT NULL COMMENT '债权申请ID, 参考T6260.F01',
  `F14` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (`F01`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 COMMENT='合同保全列表';

DROP TABLE IF EXISTS `S62`.`T6272`;
CREATE TABLE `S62`.`T6272` (
`F01`  int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '网签协议ID,自增' ,
`F02`  int(10) UNSIGNED NOT NULL COMMENT '用户ID,参考T6110.F01' ,
`F03`  int(10) UNSIGNED NOT NULL COMMENT '协议版本号,参考T5126.F02' ,
`F04`  varchar(10) DEFAULT NULL COMMENT '保全ID' ,
`F05`  datetime NULL DEFAULT NULL COMMENT '网签时间' ,
`F06`  enum('WBQ','YBQ') CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '保全状态，WBQ:未保全;YBQ:已保全;' ,
`F07`  varchar(128) DEFAULT NULL COMMENT '协议本地存储路径',
`F08` varchar(11) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '协议编号',
PRIMARY KEY (`F01`)
)
ENGINE=InnoDB
DEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci
COMMENT='网签协议表'
ROW_FORMAT=COMPACT
;

DROP TABLE IF EXISTS `S65`.`T6529`;
CREATE TABLE `S65`.`T6529` (
  `F01` int(10) unsigned NOT NULL COMMENT '订单ID,参考T6501.F01',
  `F02` int(10) unsigned NOT NULL COMMENT '标ID,参考T6230.F01',
  `F03` int(10) unsigned NOT NULL COMMENT '不良债权申请ID,参考T6264.F01',
  `F04` int(10) unsigned NOT NULL COMMENT '购买人ID,参考T6110.F01',
  `F05` int(10) unsigned NOT NULL COMMENT '债权ID,参考T6251.F01',
  `F06` decimal(20,2) unsigned NOT NULL COMMENT '债权金额',
  `F07` int(11) NOT NULL COMMENT '交易类型ID,参考T5122.F01',
  `F08` enum('S','F') NOT NULL DEFAULT 'F' COMMENT '是否完成,S:是;F:否;',
  PRIMARY KEY (`F01`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='不良债权转让订单';


DROP PROCEDURE IF EXISTS `S70`.`SP_T7044`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `S70`.`SP_T7044`(IN _date DATE)
    COMMENT '成交数据统计-按月-按期限'
BEGIN
	-- 成交数据统计-按月-按期限	
	-- 年份
	DECLARE		_F01							INT 					UNSIGNED		DEFAULT	0;	
	-- 月份
	DECLARE		_F02							INT 					UNSIGNED		DEFAULT	0;	
	-- 成交金额
	DECLARE		_F03							DECIMAL(20,2) DEFAULT 0.00;	
	-- 成交笔数
	DECLARE		_F04							INT 					UNSIGNED		DEFAULT 0;	
	-- 期限
	DECLARE		_F05							INT 					UNSIGNED		DEFAULT 0;	
	-- 是否按天计算
	DECLARE		_F06							VARCHAR(32)				DEFAULT 'F';
						
	DECLARE		_startDate			DATE;
	DECLARE		_endDate				DATETIME;
	DECLARE		_current_date				DATE;
	-- 借款列表游标定义
	DECLARE 	_done 					INT 					UNSIGNED		DEFAULT 0;
	DECLARE 	_loan_list 			CURSOR FOR 		SELECT IFNULL(SUM(T6230.F05-T6230.F07),0),COUNT(T6230.F01),CASE WHEN T6231.F21='S' THEN T6231.F22 ELSE T6230.F09 END,
	T6231.F21 FROM S62.T6230 INNER JOIN S62.T6231 ON T6230.F01 = T6231.F01 WHERE T6230.F20 IN('HKZ','YJQ','YDF') AND T6231.F12>=_startDate AND T6231.F12<=_endDate GROUP BY T6230.F09;
	DECLARE 	CONTINUE 				HANDLER FOR NOT FOUND SET _done = 1;

	SET _current_date = IFNULL(_date,CURRENT_DATE());
	SET _current_date = DATE_SUB(_current_date,INTERVAL 1 DAY);
	SET _F01 = YEAR(_current_date);
	SET _F02 = MONTH(_current_date);
	CALL SP_MONTH_DATE(_current_date,_startDate,_endDate);
	OPEN _loan_list;
	
	REPEAT 
		FETCH _loan_list INTO _F03,_F04,_F05,_F06;
			
		IF NOT _done THEN
				INSERT INTO S70.T7044 SET F01 = _F01, F02 = _F02, F03 = _F03, F04 = _F04 ,F05 = _F05 ,F07=_F06
				ON DUPLICATE KEY UPDATE F03 = VALUES(F03) , F04 = VALUES(F04), F05 = VALUES(F05);
		END IF;
	UNTIL _done END REPEAT;

	CLOSE _loan_list;
END
;;
DELIMITER ;


DROP PROCEDURE IF EXISTS `S70`.`SP_T7052`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `S70`.`SP_T7052`()
BEGIN
	-- 日期
	DECLARE _F01  VARCHAR(50) DEFAULT NULL;
	-- 注册用户数
	DECLARE _F02 INT DEFAULT 0;
	-- PC端注册用户数
	DECLARE _F03 INT DEFAULT 0;
	-- APP端注册用户数
	DECLARE _F04 INT DEFAULT 0;
	-- 微信端注册用户数
	DECLARE _F05 INT DEFAULT 0;
	-- 后台注册用户数
	DECLARE _F06 INT DEFAULT 0;
    -- 登录用户数
	DECLARE _F07 INT DEFAULT 0;
	-- 充值用户数
	DECLARE _F08 INT DEFAULT 0;
	-- 提现用户数
	DECLARE _F09 INT DEFAULT 0;
	-- 投资用户数
	DECLARE _F10 INT DEFAULT 0;
	-- 借款用户数
	DECLARE _F11 INT DEFAULT 0;
	-- 年份
  DECLARE _F13 CHAR(4) DEFAULT NULL;
	-- 季度
  DECLARE _F14 CHAR(5) DEFAULT NULL;
	-- 月份
  DECLARE _F15 CHAR(6) DEFAULT NULL;
	-- 周
  DECLARE _F16 CHAR(6) DEFAULT NULL;


	SELECT CURDATE() INTO _F01 FROM dual;	
	SELECT YEAR(_F01) INTO _F13 FROM DUAL;
  SELECT CONCAT(YEAR(_F01),QUARTER(_F01)) INTO _F14 FROM DUAL; 
  SELECT CONCAT(YEAR(_F01),MONTH(_F01)) INTO _F15 FROM DUAL;
  SELECT CONCAT(YEAR(_F01),WEEK(_F01)) INTO _F16 FROM DUAL;
	-- 注册用户数
	SELECT COUNT(1) INTO _F02 FROM S61.T6110 WHERE DATE(T6110.F09) = _F01;	 
	-- PC端注册用户数
	SELECT COUNT(1) INTO _F03 FROM S61.T6110 WHERE T6110.F08 = 'PCZC' AND DATE(T6110.F09) = _F01;	 
	-- APP端注册用户数
	SELECT COUNT(1) INTO _F04 FROM S61.T6110 WHERE T6110.F08 = 'APPZC' AND DATE(T6110.F09) = _F01;	 
	-- 微信端注册用户数
	SELECT COUNT(1) INTO _F05 FROM S61.T6110 WHERE T6110.F08 = 'WXZC' AND DATE(T6110.F09) = _F01;	
	-- 后台注册用户数
	SELECT COUNT(1) INTO _F06 FROM S61.T6110 WHERE T6110.F08 = 'HTTJ' AND DATE(T6110.F09) = _F01;	
	-- 登录用户数
	SELECT COUNT(1) INTO _F07 FROM S61.T6110 WHERE EXISTS (SELECT 1 FROM S61.T6190 WHERE T6190.F02 = T6110.F01 AND DATE(T6190.F03) = _F01);	
	-- 充值用户数
	SELECT COUNT(1) INTO _F08 FROM S61.T6110 WHERE EXISTS (SELECT 1 FROM S65.T6502 LEFT JOIN S65.T6501 ON T6502.F01 = T6501.F01 WHERE T6502.F02 = T6110.F01 AND T6502.F08 IS NOT NULL AND DATE(T6501.F06) = _F01);
	-- 提现用户数
	SELECT COUNT(DISTINCT T6503.F02) INTO _F09 FROM S65.T6503 INNER JOIN S65.T6501 ON T6503.F01 = T6501.F01 WHERE T6501.F03 = 'CG' AND DATE(T6501.F06) = _F01;
	-- 投资用户数
	SELECT COUNT(1) INTO _F10 FROM S61.T6110 WHERE EXISTS (SELECT 1 FROM S62.T6250 LEFT JOIN S62.T6231 ON T6231.F01 = T6250.F02 WHERE T6250.F03 = T6110.F01 AND T6250.F08 = 'S' AND DATE(T6231.F12) = _F01);
	-- 借款用户数
	SELECT COUNT(1) INTO _F11 FROM S61.T6110 WHERE EXISTS (SELECT 1 FROM S62.T6230 LEFT JOIN S62.T6231 ON T6231.F01 = T6230.F01 WHERE T6230.F02 = T6110.F01 AND T6230.F20 IN ('HKZ','YJQ','YDF','YZR') AND DATE(T6231.F12) = _F01);
	
    INSERT INTO S70.T7052 SET F01 = _F01, F02 = _F02, F03 = _F03, F04 = _F04, F05 = _F05, F06 = _F06, F07 = _F07, F08 = _F08, F09 = _F09, F10 = _F10, F11 = _F11, F13 = _F13, F14 = _F14, F15 = _F15, F16 = _F16 
    ON DUPLICATE KEY UPDATE F01 = VALUES(F01),F02 = VALUES(F02),F03 = VALUES(F03),F04 = VALUES(F04),F05 = VALUES(F05), F06 = VALUES(F06), F07 = VALUES(F07), F08 = VALUES(F08), F09 = VALUES(F09), F10 = VALUES(F10), F11 = VALUES(F11), F13 = VALUES(F13), F14 = VALUES(F14), F15 = VALUES(F15), F16 = VALUES(F16);

END
;;
DELIMITER ;


DROP EVENT IF EXISTS `S70`.`EVT_T7052`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` EVENT `S70`.`EVT_T7052` ON SCHEDULE EVERY 10 SECOND STARTS '2015-12-01 00:00:01' ON COMPLETION PRESERVE ENABLE DO CALL SP_T7052()
;;
DELIMITER ;


DROP TABLE IF EXISTS `S70`.`T7036`;
CREATE TABLE `S70`.`T7036` (
  `F01` int(4) unsigned NOT NULL COMMENT '年度',
  `F02` tinyint(2) unsigned NOT NULL COMMENT '月度',
  `F03` decimal(20,2) NOT NULL DEFAULT '0.00' COMMENT '收入',
  `F04` decimal(20,2) NOT NULL DEFAULT '0.00' COMMENT '支出',
  `F05` decimal(20,2) NOT NULL DEFAULT '0.00' COMMENT '盈亏',
  `F06` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`F01`,`F02`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='平台资金统计-按月度';


DELIMITER $$

USE `s70`$$

DROP PROCEDURE IF EXISTS `SP_T7036`$$

CREATE DEFINER=`root`@`%` PROCEDURE `SP_T7036`(IN _date DATE)
    COMMENT '平台资金统计-按月度'
BEGIN 
	DECLARE	 _F01	 INT UNSIGNED	 DEFAULT	0;	
	DECLARE	 _F02	 INT UNSIGNED	 DEFAULT	0;	
	DECLARE	 _F03	 DECIMAL(20,2) DEFAULT 0.00; 
	DECLARE	 _F04	 DECIMAL(20,2) DEFAULT 0.00; 
	DECLARE	 _F05	 DECIMAL(20,2) DEFAULT 0.00; 
	DECLARE	 _ZJZHID	 INT UNSIGNED	 DEFAULT	0;	
	DECLARE	 _startDate	 DATE; 
	DECLARE	 _endDate	 DATE; 
	DECLARE	 _current_date	 DATE; 
	SET _current_date = IFNULL(_date,CURRENT_DATE()); 
	SET _current_date = DATE_SUB(_current_date,INTERVAL 1 DAY);
	SET _F01 = YEAR(_current_date);
	SET _F02 = MONTH(_current_date); 
	CALL SP_ROSES_DATE(_current_date,_startDate,_endDate); 
	SELECT F01 INTO _ZJZHID FROM S61.T6101 WHERE F02 = (SELECT F01 FROM S71.T7101 LIMIT 1) AND F03 = 'WLZH' LIMIT 1; 
	SELECT IFNULL(SUM(T6102.F06),0),IFNULL(SUM(T6102.F07),0) INTO _F03 , _F04	 FROM S61.T6102 
	WHERE T6102.F05 >= _startDate AND DATE(T6102.F05) <= _endDate AND T6102.F02 =_ZJZHID; 
	SET _F05 = _F03 - _F04; 
	INSERT INTO S70.T7036 SET F01 = _F01, F02 = _F02, F03 = _F03, F04 = _F04, F05 = _F05 
	ON DUPLICATE KEY UPDATE F03 = VALUES(F03) , F04 = VALUES(F04),F05 = VALUES(F05); 
END$$

DELIMITER ;



DROP EVENT IF EXISTS `S70`.`EVT_T7036`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `S70`.`EVT_T7036` ON SCHEDULE EVERY 1 DAY STARTS '2013-12-31 11:01:00' ON COMPLETION PRESERVE ENABLE DO CALL SP_T7036(CURRENT_DATE())
;;
DELIMITER ;

DELIMITER $$
DROP PROCEDURE IF EXISTS `S70`.`SP_ROSES_DATE`$$
CREATE DEFINER=`root`@`%` PROCEDURE `S70`.`SP_ROSES_DATE`(IN _current_date DATE, OUT _startDate DATE, OUT _endDate DATE)
    COMMENT '计算月份第一天和最后一天'
BEGIN 
	SET _startDate = CONCAT(DATE_FORMAT(LAST_DAY(_current_date),'%Y-%m-'),'01'); 
	SET _endDate = LAST_DAY(_current_date); 
END$$
DELIMITER ;



ALTER TABLE `S70`.`T7038`
ADD COLUMN `F16`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '本金垫付返还',
ADD COLUMN `F17`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '利息垫付返还',
ADD COLUMN `F18`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '罚息垫付返还',
ADD COLUMN `F19`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '本金垫付支出',
ADD COLUMN `F20`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '利息垫付支出',
ADD COLUMN `F21`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '罚息垫付支出',
ADD COLUMN `F22`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '加息奖励费用',
ADD COLUMN `F23`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '体验金投资费用',
ADD COLUMN `F24`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '红包奖励费用',
ADD COLUMN `F25`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '奖励标奖励费用',
ADD COLUMN `F26`  DECIMAL(20,2) NULL DEFAULT '0.00' COMMENT '线下充值';

DELIMITER $$

USE `s70`$$

DROP PROCEDURE IF EXISTS `SP_T7038`$$

CREATE DEFINER=`root`@`%` PROCEDURE `SP_T7038`(IN _date DATE)
    COMMENT '平台资金统计-按年度'
BEGIN
	-- 平台资金统计-按年度
	-- 年份
	DECLARE		_F01							INT 					UNSIGNED		DEFAULT	0;	
	-- 充值手续费
	DECLARE		_F03							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 提现手续费
	DECLARE		_F04							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 充值成本
	DECLARE		_F05							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 提现成本
	DECLARE		_F06							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 身份验证手续费
	DECLARE		_F07							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 借款管理费
	DECLARE		_F08							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 逾期管理费
	DECLARE		_F09							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 债权转让费
	DECLARE		_F10							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 活动费用
	DECLARE		_F11							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 理财管理费
	DECLARE		_F12							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 持续推广费用
	DECLARE		_F13							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 有效推广费用
	DECLARE		_F14							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 违约金手续费
	DECLARE		_F15							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 本金垫付返还
	DECLARE		_F16							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 利息垫付返还
	DECLARE		_F17							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 罚息垫付返还
	DECLARE		_F18							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 本金垫付支出
	DECLARE		_F19							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 利息垫付支出
	DECLARE		_F20							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 罚息垫付支出
	DECLARE		_F21							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 加息奖励费用
	DECLARE		_F22							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 体验金投资费用
	DECLARE		_F23							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 红包奖励费用
	DECLARE		_F24							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 奖励标奖励费用
	DECLARE		_F25							DECIMAL(20,2) 			 DEFAULT 	0.00;
	-- 线下充值
	DECLARE		_F26							DECIMAL(20,2) 			 DEFAULT 	0.00;
						
	DECLARE		_startDate			DATE;
	DECLARE		_endDate				DATE;
	DECLARE		_current_date				DATE;
	SET _current_date = IFNULL(_date,CURRENT_DATE());
	SET _current_date = DATE_SUB(_current_date,INTERVAL 1 DAY);
	SET _F01 = YEAR(_current_date);
	CALL SP_YEAR_DATE(_F01,_startDate,_endDate);
	
	SELECT IFNULL(SUM(F07),0) INTO _F03  FROM S61.T6102 WHERE  F03 = 1002 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F06),0) INTO _F04  FROM S61.T6130 WHERE  F09 = 'YFK' AND F08 >= _startDate AND DATE(F08) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F05  FROM S61.T6102 WHERE  F03 = 1003 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F06  FROM S61.T6102 WHERE  F03 = 2003 AND	F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F07  FROM S61.T6102 WHERE  F03 = 1501 AND	F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F06),0) INTO _F08  FROM S61.T6102 WHERE  F03 = 1201 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F09  FROM S61.T6102 WHERE  F03 = 7003 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F10  FROM S61.T6102 WHERE  F03 = 4001 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F11  FROM S61.T6102 WHERE  F03 = 8001 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F12  FROM S61.T6102 WHERE  F03 = 1202 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F13  FROM S61.T6102 WHERE  F03 = 9002 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F14  FROM S61.T6102 WHERE  F03 = 9001 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F15  FROM S61.T6102 WHERE  F03 = 7007 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(T6253.F06),0) INTO _F21 FROM S62.T6253 JOIN S62.T6255 ON T6253.F01=T6255.F02 WHERE T6255.F05=7001 AND T6253.F07 >= _startDate AND DATE(T6253.F07) <= _endDate;
	SELECT IFNULL(SUM(T6253.F06),0) INTO _F21 FROM S62.T6253 JOIN S62.T6255 ON T6253.F01=T6255.F02 WHERE T6255.F05=7002 AND T6253.F07 >= _startDate AND DATE(T6253.F07) <= _endDate;
	SELECT IFNULL(SUM(T6253.F06),0) INTO _F21 FROM S62.T6253 JOIN S62.T6255 ON T6253.F01=T6255.F02 WHERE T6255.F05 IN (7003,7004) AND T6253.F07 >= _startDate AND DATE(T6253.F07) <= _endDate;
	SELECT IFNULL(SUM(T6253.F05),0) INTO _F21 FROM S62.T6253 JOIN S62.T6255 ON T6253.F01=T6255.F02 WHERE T6255.F05=7001 AND T6253.F07 >= _startDate AND DATE(T6253.F07) <= _endDate;
	SELECT IFNULL(SUM(T6253.F05),0) INTO _F21 FROM S62.T6253 JOIN S62.T6255 ON T6253.F01=T6255.F02 WHERE T6255.F05=7002 AND T6253.F07 >= _startDate AND DATE(T6253.F07) <= _endDate;
	SELECT IFNULL(SUM(T6253.F05),0) INTO _F21 FROM S62.T6253 JOIN S62.T6255 ON T6253.F01=T6255.F02 WHERE T6255.F05 IN (7003,7004) AND T6253.F07 >= _startDate AND DATE(T6253.F07) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F22  FROM S61.T6102 WHERE  F03 = 7010 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F23  FROM S61.T6102 WHERE  F03 = 3003 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F24  FROM S61.T6102 WHERE  F03 = 7009 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F25  FROM S61.T6102 WHERE  F03 = 7008 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	SELECT IFNULL(SUM(F07),0) INTO _F26  FROM S61.T6102 WHERE  F03 = 1004 AND F05 >= _startDate AND DATE(F05) <= _endDate;
	
	INSERT INTO S70.T7038 SET F01 = _F01, F03 = _F03, F04 = _F04, F05 = _F05 ,F06 = _F06, F07 = _F07, F08 = _F08, F09 = _F09, F10 = _F10, F11 = _F11, F12 = _F12,F13 = _F13, F14 = _F14, F15 = _F15, 
	F16 = _F16, F17 = _F17, F18 = _F18, F19 = _F19, F20 = _F20, F21 = _F21, F22 = _F22, F23 = _F23, F24 = _F24, F25 = _F25, F26 = _F26 
	ON DUPLICATE KEY UPDATE F03 = VALUES(F03) , F04 = VALUES(F04),F05 = VALUES(F05),F06 = VALUES(F06) , F07 = VALUES(F07),
	F08 = VALUES(F08),F09 = VALUES(F09) , F10 = VALUES(F10), F11 = VALUES(F11), F12 = VALUES(F12), F13 = VALUES(F13), F14 = VALUES(F14), 
	F15 = VALUES(F15), F16 = VALUES(F16), F17 = VALUES(F17), F18 = VALUES(F18), F19 = VALUES(F19), F20 = VALUES(F20), F21 = VALUES(F21), 
	F22 = VALUES(F22), F23 = VALUES(F23), F24 = VALUES(F24), F25 = VALUES(F25), F26 = VALUES(F26);
END$$

DELIMITER ;


ALTER TABLE S70.T7044 ADD COLUMN 
F07 enum('S','F') NOT NULL DEFAULT 'F' COMMENT '是否为按天借款,S:是;F:否';


ALTER TABLE S70.T7044 DROP PRIMARY KEY;
ALTER TABLE S70.T7044 ADD PRIMARY  KEY(F01,F02,F05,F07);


DROP TABLE IF EXISTS `S70`.`T7052`;
CREATE TABLE `S70`.`T7052` (
  `F01` varchar(50) NOT NULL DEFAULT '' COMMENT '日期',
  `F02` int(11) NOT NULL DEFAULT '0' COMMENT '注册用户数',
  `F03` int(11) NOT NULL DEFAULT '0' COMMENT 'PC端注册用户数',
  `F04` int(11) NOT NULL DEFAULT '0' COMMENT 'APP端注册用户数',
  `F05` int(11) NOT NULL DEFAULT '0' COMMENT '微信端注册用户数',
  `F06` int(11) NOT NULL DEFAULT '0' COMMENT '后台注册用户数',
  `F07` int(11) NOT NULL DEFAULT '0' COMMENT '登录用户数',
  `F08` int(11) NOT NULL DEFAULT '0' COMMENT '充值用户数',
  `F09` int(11) NOT NULL DEFAULT '0' COMMENT '提现用户数',
  `F10` int(11) NOT NULL DEFAULT '0' COMMENT '投资用户数',
  `F11` int(11) NOT NULL DEFAULT '0' COMMENT '借款用户数',
  `F12` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `F13` char(4) NOT NULL COMMENT '年份',
  `F14` char(5) NOT NULL COMMENT '季度（年份+季度）',
  `F15` char(6) NOT NULL COMMENT '月份（年份+月份）',
  `F16` char(6) NOT NULL COMMENT '周（年份+周）',
  PRIMARY KEY (`F01`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='平台用户数统计';



DROP TABLE IF EXISTS `S70`.`T7053`;
CREATE TABLE `S70`.`T7053` (
  `F01` int(4) unsigned NOT NULL COMMENT '年份',
  `F02` int(2) unsigned NOT NULL COMMENT '月份',
  `F03` int(11) NOT NULL DEFAULT 0 COMMENT '人数',
  `F04` decimal(20,2) NOT NULL DEFAULT 0.00 COMMENT '金额',
  `F05` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`F01`,`F02`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='逾期数据统计';


DELIMITER $$

USE `s70`$$

DROP PROCEDURE IF EXISTS `SP_T7053`$$

CREATE DEFINER=`root`@`%` PROCEDURE `SP_T7053`(IN _date DATE)
    COMMENT '逾期数据统计'
BEGIN 
	DECLARE	 _F01	 INT UNSIGNED	 DEFAULT 0;	
	DECLARE	 _F02	 INT UNSIGNED	 DEFAULT 0;	
	DECLARE	 _F03	 INT UNSIGNED    DEFAULT 0; 
	DECLARE	 _F04	 DECIMAL(20,2) DEFAULT 0.00; 
	DECLARE	 _current_date	 DATE; 
	SET _current_date = IFNULL(_date,CURRENT_DATE()); 
	SET _current_date = DATE_SUB(_current_date,INTERVAL 1 DAY);
	SET _F01 = YEAR(_current_date);
	SET _F02 = MONTH(_current_date); 
	SELECT COUNT(DISTINCT T6252.F03) INTO _F03 FROM S62.T6252 WHERE ((T6252.F08 < DATE(CURRENT_DATE()) AND T6252.F10 IS NULL ) OR (T6252.F08 < DATE(T6252.F10))) AND DATE_FORMAT(DATE_ADD(T6252.F08,INTERVAL 1 DAY),'%Y%m')=DATE_FORMAT(CURRENT_DATE(),'%Y%m');
	SELECT IFNULL(SUM(T6252.F07),0) INTO _F04 FROM S62.T6252 WHERE ((T6252.F08 < DATE(CURRENT_DATE()) AND T6252.F10 IS NULL ) OR (T6252.F08 < DATE(T6252.F10))) AND T6252.F05 IN(7001,7002,7004) AND DATE_FORMAT(DATE_ADD(T6252.F08,INTERVAL 1 DAY),'%Y%m')=DATE_FORMAT(CURRENT_DATE(),'%Y%m');
	INSERT INTO S70.T7053 SET F01 = _F01, F02 = _F02, F03 = _F03, F04 = _F04 
	ON DUPLICATE KEY UPDATE F03 = VALUES(F03) , F04 = VALUES(F04); 
END$$

DELIMITER ;



DROP EVENT IF EXISTS `S70`.`EVT_T7053`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` EVENT `S70`.`EVT_T7053` ON SCHEDULE EVERY 1 DAY STARTS '2013-12-31 11:01:00' ON COMPLETION PRESERVE ENABLE DO CALL SP_T7053(CURRENT_DATE())
;;
DELIMITER ;


DROP PROCEDURE IF EXISTS `S71`.`SP_T7190`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `S71`.`SP_T7190`()
    COMMENT '业务员业绩统计'
	BEGIN
	-- 业务员业绩统计
	-- 一级用户投资金额
	DECLARE _F01 DECIMAL(20,2) DEFAULT 0.00;
	-- 一级用户借款金额
	DECLARE _F02 DECIMAL(20,2) DEFAULT 0.00;
	-- 一级用户充值金额
	DECLARE _F03 DECIMAL(20,2) DEFAULT 0.00;
	-- 一级用户提现金额
	DECLARE _F04 DECIMAL(20,2) DEFAULT 0.00;
	-- 二级用户投资金额
	DECLARE _F05 DECIMAL(20,2) DEFAULT 0.00;
	-- 二级用户借款金额
	DECLARE _F06 DECIMAL(20,2) DEFAULT 0.00;
  -- 二级用户充值金额
	DECLARE _F07 DECIMAL(20,2) DEFAULT 0.00;
	-- 二级用户提现金额
	DECLARE _F08 DECIMAL(20,2) DEFAULT 0.00;

	-- 一级用户线下充值金额
	DECLARE _F03_1 DECIMAL(20,2) DEFAULT 0.00;
	-- 二级用户线下充值金额
	DECLARE _F07_1 DECIMAL(20,2) DEFAULT 0.00;

  DECLARE _F10 VARCHAR(50) DEFAULT null;
  DECLARE _F11 VARCHAR(50) DEFAULT null;

  DECLARE T7110_F12 VARCHAR(50);
  DECLARE 	_done 					INT 					UNSIGNED		DEFAULT 0;
  DECLARE ywyCur CURSOR   FOR SELECT  DISTINCT F12 FROM S71.T7110 WHERE T7110.F12 IS NOT NULL;
  DECLARE 	CONTINUE 		HANDLER FOR NOT FOUND SET _done = 1;
  OPEN ywyCur;
		REPEAT 
			FETCH ywyCur INTO T7110_F12;
			IF NOT _done THEN
				SELECT CURDATE() INTO _F10 FROM dual;	
				-- 一级用户投资金额查询
				SELECT IFNULL(SUM(T6250.F04),0) INTO _F01 FROM S62.T6250 LEFT JOIN S62.T6231 ON T6231.F01 = T6250.F02 WHERE T6250.F12 = T7110_F12 AND T6250.F08='S' AND T6250.F13 = 'QY' AND (SELECT COUNT(1) FROM S61.T6110 WHERE T6110.F14 IS NOT NULL AND T6110.F01 = T6250.F03) > 0 AND DATE(T6231.F12) = _F10;	 
				-- 一级用户借款金额查询
				SELECT IFNULL(SUM(T6230.F05-T6230.F07),0) INTO _F02 FROM S62.T6230 LEFT JOIN S62.T6231 ON T6230.F01 = T6231.F01 WHERE T6231.F31 = T7110_F12 AND T6231.F32 = 'QY' AND T6230.F20 IN('HKZ','YJQ','YDF','YZR') AND (SELECT COUNT(1) FROM S61.T6110 WHERE T6110.F14 IS NOT NULL AND T6110.F01 = T6230.F02) > 0 AND DATE(T6231.F12) = _F10;
				-- 一级用户充值金额查询
				SELECT IFNULL(SUM(T6502.F03),0) INTO _F03 FROM S65.T6502 LEFT JOIN S65.T6501 ON T6502.F01 = T6501.F01 WHERE T6502.F09 = T7110_F12 AND T6502.F10 = 'QY' AND T6501.F03 = 'CG' AND (SELECT COUNT(1) FROM S61.T6110 WHERE T6110.F14 IS NOT NULL AND T6110.F01 = T6502.F02) > 0 AND DATE(T6501.F06) = _F10;
				-- 一级用户线下充值金额查询
				SELECT IFNULL(SUM(T7150.F04),0) INTO _F03_1 FROM S71.T7150 WHERE T7150.F16 = T7110_F12 AND T7150.F17 = 'QY' AND T7150.F05 = 'YCZ' AND EXISTS (SELECT 1 FROM S61.T6110 WHERE T6110.F14 IS NOT NULL AND T6110.F01 = T7150.F02) AND DATE(T7150.F10) = _F10;
				-- 一级用户提现金额查询
				SELECT IFNULL(SUM(T6130.F04),0) INTO _F04 FROM S61.T6130 WHERE T6130.F17 = T7110_F12 AND T6130.F18 = 'QY' AND T6130.F09 = 'YFK' AND EXISTS (SELECT 1 FROM S61.T6110 WHERE T6110.F14 IS NOT NULL AND T6110.F01 = T6130.F02) AND DATE(T6130.F14) = _F10;
				-- 二级用户投资金额查询
				SELECT IFNULL(SUM(T6250.F04),0) INTO _F05 FROM S62.T6250 LEFT JOIN S62.T6231 ON T6231.F01 = T6250.F02 WHERE T6250.F03 IN(SELECT F01 FROM S61.T6111 WHERE T6111.F03 IN (SELECT T6111.F02 FROM S61.T6111 WHERE T6111.F01 IN (SELECT T6110.F01 FROM S61.T6110 WHERE T6110.F14 IS NOT NULL))) AND T6250.F08='S' AND T6250.F13 = 'QY' AND T6250.F12 = T7110_F12 AND DATE(T6231.F12) = _F10; 
				-- 二级用户借款金额查询
				SELECT IFNULL(SUM(T6230.F05-T6230.F07),0) INTO _F06 FROM S62.T6230 LEFT JOIN S62.T6231 ON T6230.F01 = T6231.F01 WHERE T6230.F02 
				IN(SELECT F01 FROM S61.T6111 WHERE T6111.F03 IN (SELECT T6111.F02 FROM S61.T6111 WHERE T6111.F01 
				IN (SELECT T6110.F01 FROM S61.T6110 WHERE T6110.F14 IS NOT NULL))) AND T6230.F20 IN('HKZ','YJQ','YDF','YZR') AND T6231.F32 = 'QY' AND T6231.F31 = T7110_F12 AND DATE(T6231.F12) = _F10;
				-- 二级用户充值金额查询
				SELECT IFNULL(SUM(T6502.F03),0) INTO _F07 FROM S65.T6502 LEFT JOIN S65.T6501 ON T6502.F01 = T6501.F01 WHERE T6502.F09 = T7110_F12 AND T6502.F10 = 'QY' AND T6501.F03 = 'CG' AND T6502.F02 IN (SELECT F01 FROM S61.T6111 WHERE T6111.F03 IN (SELECT T6111.F02 FROM S61.T6111 WHERE T6111.F01 IN (SELECT T6110.F01 FROM S61.T6110 WHERE T6110.F14 IS NOT NULL)))  AND DATE(T6501.F06) = _F10;
				-- 二级用户线下充值金额查询
				SELECT IFNULL(SUM(T7150.F04),0) INTO _F07_1 FROM S71.T7150 WHERE T7150.F16 = T7110_F12 AND T7150.F17 = 'QY' AND T7150.F05 = 'YCZ' AND T7150.F02 IN (SELECT F01 FROM S61.T6111 WHERE T6111.F03 IN (SELECT T6111.F02 FROM S61.T6111 WHERE T6111.F01 IN (SELECT T6110.F01 FROM S61.T6110 WHERE T6110.F14 IS NOT NULL ))) AND DATE(T7150.F10) = _F10;
				-- 二级用户提现金额查询
				SELECT IFNULL(SUM(T6130.F04),0) INTO _F08 FROM S61.T6130 WHERE T6130.F17 = T7110_F12 AND T6130.F18 = 'QY' AND T6130.F09 = 'YFK' AND T6130.F02 IN (SELECT F01 FROM S61.T6111 WHERE T6111.F03 IN (SELECT T6111.F02 FROM S61.T6111 WHERE T6111.F01 IN (SELECT T6110.F01 FROM S61.T6110 WHERE T6110.F14 IS NOT NULL))) AND DATE(T6130.F14) = _F10;
				
        INSERT INTO S71.T7190 SET F01 = _F01, F02 = _F02, F03 = _F03+_F03_1, F04 = _F04, F05 = _F05, F06 = _F06, F07 = _F07+_F07_1, F08 = _F08, F10 = _F10, F11 = T7110_F12 ON DUPLICATE KEY UPDATE F01 = VALUES(F01),F02 = VALUES(F02),F03 = VALUES(F03),F04 = VALUES(F04),F05 = VALUES(F05), F06 = VALUES(F06), F07 = VALUES(F07), F08 = VALUES(F08);
		END IF;
		UNTIL _done END REPEAT;			
 CLOSE ywyCur;

END
;;
DELIMITER ;

